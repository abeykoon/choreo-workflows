openapi: 3.0.1
info:
  title: Workflow Mgt V1
  version: 0.1.0
servers:
- url: "{server}:{port}/workflow-mgt/v1"
  variables:
    server:
      default: ""
    port:
      default: config:servicePort
paths:
  /workflow/definitions:
    get:
      summary: Get all the workflow definitions defined in Choreo.
      operationId: getWorkflowDefinitions
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkflowDefinition'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /workflow/configs:
    get:
      summary: Get all the workflow configurations defined in the organization.
      operationId: getWorkflowConfigs
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrgWorkflowConfig'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      summary: Configure a workflow for the organization.
      operationId: postWorkflowConfigs
      requestBody:
        description: parameter description
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgWorkflowConfig'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgWorkflowConfig'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ErrorDetails'
                - $ref: '#/components/schemas/ErrorPayload'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /workflow/configs/{workflow-config-id}:
    put:
      summary: Update a workflow configuration.
      operationId: putWorkflowConfigsWorkflowConfigId
      parameters:
      - name: workflow-config-id
        in: path
        description: identifier of the workflow configuration
        required: true
        schema:
          type: string
      requestBody:
        description: Updated workflow configuration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgWorkflowConfig'
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgWorkflowConfig'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ErrorDetails'
                - $ref: '#/components/schemas/ErrorPayload'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /workflow-instances:
    get:
      summary: Get filtered workflows active in the organization.
      operationId: getWorkflowInstances
      parameters:
      - name: limit
        in: query
        description: Maximum number of workflows to return
        schema:
          type: integer
          format: int64
          default: 20
      - name: offset
        in: query
        description: Offset to start returning workflows
        schema:
          type: integer
          format: int64
          default: 0
      - name: action
        in: query
        description: Action to filter the workflows
        schema:
          type: string
          nullable: true
      - name: status
        in: query
        description: Status to filter the workflows
        schema:
          type: string
          nullable: true
      - name: resource
        in: query
        description: Resource to filter the workflows
        schema:
          type: string
          nullable: true
      - name: requested-by
        in: query
        description: Requested user to filter the workflows
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Ok
          content:
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkflowInstance'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ErrorDetails'
                - $ref: '#/components/schemas/ErrorPayload'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      summary: Creates a new workflow request.
      operationId: postWorkflowInstances
      requestBody:
        description: Workflow request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowInstanceCreateRequest'
        required: true
      responses:
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ErrorDetails'
                - $ref: '#/components/schemas/ErrorPayload'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "506":
          description: VariantAlsoNegotiates
  /workflow-instances/{workflow-instance-id}:
    get:
      summary: Get a specific workflow instance.
      operationId: getWorkflowInstancesWorkflowInstanceId
      parameters:
      - name: workflow-instance-id
        in: path
        description: Identifier of the workflow instance
        required: true
        schema:
          type: string
      responses:
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ErrorDetails'
                - $ref: '#/components/schemas/ErrorPayload'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "506":
          description: VariantAlsoNegotiates
    delete:
      summary: Cancel a workflow request.
      operationId: deleteWorkflowInstancesWorkflowInstanceId
      parameters:
      - name: workflow-instance-id
        in: path
        description: Identifier of the workflow instance
        required: true
        schema:
          type: string
      responses:
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "506":
          description: VariantAlsoNegotiates
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /workflow-instances/status:
    get:
      summary: |-
        Get the status of workflows related to a action and a resource.
        This is used to check if a request is in progress for a conflicting action.
      operationId: getWorkflowInstancesStatus
      parameters:
      - name: action
        in: query
        description: Action performed by the workflow
        required: true
        schema:
          type: string
      - name: resource
        in: query
        description: Resource on which the action is performed
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WorkflowInstanceStatus'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /review/{workflow-id}/decision:
    post:
      summary: Review a workflow request.
      operationId: postReviewWorkflowIdDecision
      parameters:
      - name: workflow-id
        in: path
        description: Identifier of the workflow instance
        required: true
        schema:
          type: string
      requestBody:
        description: Payload with review details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewerDecisionRequest'
        required: true
      responses:
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ErrorDetails'
                - $ref: '#/components/schemas/ErrorPayload'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "506":
          description: VariantAlsoNegotiates
  /review/{workflow-id}/data:
    get:
      summary: |-
        Get the formatted review data captured at the workflow request.
        This is used to display the captured data in UI/email/notifications.
        The format is performed based on the workflow definition.
      operationId: getReviewWorkflowIdData
      parameters:
      - name: workflow-id
        in: path
        description: Identifier of the workflow instance
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /audits:
    get:
      summary: Get all the audits of the workflows in the organization based on the
        filters.
      operationId: getAudits
      parameters:
      - name: orgId
        in: query
        description: Organization ID
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: Maximum number of audits to return
        schema:
          type: integer
          format: int64
          default: 20
      - name: offset
        in: query
        description: Offset to start returning audits
        schema:
          type: integer
          format: int64
          default: 0
      - name: action
        in: query
        description: Action to filter the audits
        schema:
          type: string
          nullable: true
      - name: status
        in: query
        description: Status to filter the audits
        schema:
          type: string
          nullable: true
      - name: resource
        in: query
        description: Resource to filter the audits
        schema:
          type: string
          nullable: true
      - name: requested-by
        in: query
        description: Requested user to filter the audits
        schema:
          type: string
          nullable: true
      - name: reviwed-by
        in: query
        description: Reviewer to filter the audits
        schema:
          type: string
          nullable: true
      - name: executed-by
        in: query
        description: Executor of the action after approval to filter the audits
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Ok
          content:
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditEvent'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ErrorDetails'
                - $ref: '#/components/schemas/ErrorPayload'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /audits/{workflow-instance-id}:
    get:
      summary: Get all the audits of a specific workflow run.
      operationId: getAuditsWorkflowInstanceId
      parameters:
      - name: workflow-instance-id
        in: path
        description: Identifier of the workflow instance
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditEvent'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ErrorDetails'
                - $ref: '#/components/schemas/ErrorPayload'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
components:
  schemas:
    ActionOnResource:
      type: string
      enum:
      - UPDATE
      - DELETE
      - CREATE
    ApproverType:
      type: string
      enum:
      - USER
      - ROLE
    AuditEvent:
      type: object
      allOf:
      - $ref: '#/components/schemas/WorkflowInstance'
      - required:
        - WorkflowConfig
        - eventType
        - time
        - user
        type: object
        properties:
          eventType:
            $ref: '#/components/schemas/AuditEventType'
          time:
            type: string
          user:
            type: string
        additionalProperties: false
    AuditEventType:
      type: string
      enum:
      - CANCEL
      - EXECUTE
      - REJECT
      - APPROVE
      - REQUEST
    ErrorDetails:
      required:
      - details
      - error
      type: object
      properties:
        error:
          type: string
        details:
          type: string
      additionalProperties: false
    ErrorPayload:
      required:
      - message
      - method
      - path
      - reason
      - status
      - timestamp
      type: object
      properties:
        timestamp:
          type: string
        status:
          type: integer
          format: int64
        reason:
          type: string
        message:
          type: string
        path:
          type: string
        method:
          type: string
    FormatSchemaEntry:
      required:
      - dataType
      - displayName
      - extractfrom
      type: object
      properties:
        displayName:
          type: string
        dataType:
          type: string
        extractfrom:
          type: string
      additionalProperties: false
      description: |-
        Schema instruction on how to format input data field to form
        data for the workflow
    OrgWorkflowConfig:
      required:
      - assigneeRoles
      - assignees
      - orgId
      - workflow
      type: object
      properties:
        workflow:
          $ref: '#/components/schemas/WorkflowDefinition'
        orgId:
          type: string
        assigneeRoles:
          type: array
          items:
            type: string
        assignees:
          type: array
          items:
            type: string
        formatRequestData:
          type: boolean
        externalWorkflowEngineEndpoint:
          type: string
      additionalProperties: false
      description: |-
        Workflow configuration for an action. This defines the configuration of the workflow.
        A workflow instance is created based on the configuration.
    ReviewerDecision:
      type: string
      enum:
      - APPROVED
      - REJECTED
    ReviewerDecisionRequest:
      required:
      - decision
      type: object
      properties:
        reviewedBy:
          type: string
        decision:
          $ref: '#/components/schemas/ReviewerDecision'
        reviewComment:
          type: string
      additionalProperties: false
    WorkflowContext:
      required:
      - action
      - resource
      - workflowDefinitionIdentifier
      type: object
      properties:
        workflowDefinitionIdentifier:
          type: string
        resource:
          type: string
        action:
          $ref: '#/components/schemas/ActionOnResource'
      additionalProperties: false
      description: Context of the workflow. This is used to identify the workflow
        instance uniquely within the org.
    WorkflowDefinition:
      required:
      - allowParallelRequests
      - approverTypes
      - description
      - executeUponApproval
      - id
      - name
      - requestFormatSchema
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        approverTypes:
          type: array
          items:
            $ref: '#/components/schemas/ApproverType'
        executeUponApproval:
          type: boolean
        allowParallelRequests:
          type: boolean
        requestFormatSchema:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FormatSchemaEntry'
      additionalProperties: false
      description: Workflow definition for an action. This defines the behavior of
        the workflow
    WorkflowInstance:
      type: object
      allOf:
      - $ref: '#/components/schemas/WorkflowInstanceCreateRequest'
      - required:
        - config
        - createdTime
        - id
        - orgId
        type: object
        properties:
          id:
            type: string
          orgId:
            type: string
          createdTime:
            type: string
          config:
            $ref: '#/components/schemas/OrgWorkflowConfig'
          reviewerDecision:
            $ref: '#/components/schemas/ReviewerDecisionRequest'
          status:
            $ref: '#/components/schemas/WorkflowInstanceStatus'
        additionalProperties: false
    WorkflowInstanceCreateRequest:
      required:
      - context
      - data
      - requestedBy
      type: object
      properties:
        context:
          $ref: '#/components/schemas/WorkflowContext'
        requestedBy:
          type: string
        requestComment:
          type: string
        data:
          type: object
      additionalProperties: false
      description: Request to create a workflow instance
    WorkflowInstanceStatus:
      type: string
      enum:
      - CANCELLED
      - TIMEOUT
      - NOT_FOUND
      - REJECTED
      - APPROVED
      - PENDING
      - DISABLED
